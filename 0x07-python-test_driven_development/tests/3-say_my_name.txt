# 3-say_my_name.txt

===========================
Usage of 3-say_my_name.py
===========================

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Mahmoud", "Shaheen")
    My name is Mahmoud Shaheen

::

    >>> say_my_name("Ahmed", "Galal")
    My name is Ahmed Galal

The parameter ```last_name``` is optional.

::

    >>> say_my_name("Mahmoud")
    My name is Mahmoud 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. else,
a TypeError is raised.

::

    >>> say_my_name(22, "Shaheen")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

   >>> say_my_name({"a": 10}, 8.1)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

     >>> say_my_name("a", ["b", "c"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'